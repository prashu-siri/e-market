{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HeaderInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    const newRequest = request.clone({\n      headers: request.headers.append('Content-type', 'application/json')\n    });\n    return next.handle(newRequest);\n  }\n  static {\n    this.ɵfac = function HeaderInterceptor_Factory(t) {\n      return new (t || HeaderInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HeaderInterceptor,\n      factory: HeaderInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HeaderInterceptor","constructor","intercept","request","next","newRequest","clone","headers","append","handle","factory","ɵfac"],"sources":["D:\\Development\\Angular\\e-commerce\\src\\app\\service\\header.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n\tHttpEvent,\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(\n\t\trequest: HttpRequest<unknown>,\n\t\tnext: HttpHandler\n\t): Observable<HttpEvent<unknown>> {\n\t\tconst newRequest = request.clone({\n\t\t\theaders: request.headers.append('Content-type', 'application/json'),\n\t\t});\n\n\t\treturn next.handle(newRequest);\n\t}\n}\n"],"mappings":";AAUA,OAAM,MAAOA,iBAAiB;EAC7BC,YAAA,GAAe;EAEfC,SAASA,CACRC,OAA6B,EAC7BC,IAAiB;IAEjB,MAAMC,UAAU,GAAGF,OAAO,CAACG,KAAK,CAAC;MAChCC,OAAO,EAAEJ,OAAO,CAACI,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB;KAClE,CAAC;IAEF,OAAOJ,IAAI,CAACK,MAAM,CAACJ,UAAU,CAAC;EAC/B;;;uBAZYL,iBAAiB;IAAA;EAAA;;;aAAjBA,iBAAiB;MAAAU,OAAA,EAAjBV,iBAAiB,CAAAW;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}