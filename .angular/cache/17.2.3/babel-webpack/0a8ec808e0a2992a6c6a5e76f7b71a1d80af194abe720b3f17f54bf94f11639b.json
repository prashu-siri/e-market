{"ast":null,"code":"import _asyncToGenerator from \"D:/Development/Angular/e-commerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { SecurityContext } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nconst _c0 = [\"si-icon\", \"\"];\nfunction IconComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.svgContent, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class IconComponent {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n    this.svgContent = null;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const path = `assets/icons/${_this.name}.svg`;\n      try {\n        const svgText = yield fetch(path).then(res => res.text());\n        // Extract only <path>, <circle>, etc. inside <svg> (optional, for styling)\n        const inner = svgText.replace(/<svg[^>]*>/, '').replace('</svg>', '');\n        _this.svgContent = _this.sanitizer.sanitize(SecurityContext.HTML, inner);\n      } catch (err) {\n        console.error(`Missing icon: ${path}`);\n        _this.svgContent = `<text x=\"0\" y=\"15\" font-size=\"12\">?</text>`;\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function IconComponent_Factory(t) {\n      return new (t || IconComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: IconComponent,\n      selectors: [[\"svg\", \"si-icon\", \"\"]],\n      inputs: {\n        name: \"name\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"innerHTML\", 4, \"ngIf\"], [3, \"innerHTML\"]],\n      template: function IconComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, IconComponent_ng_container_0_Template, 1, 1, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.svgContent);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["SecurityContext","i0","ɵɵelementContainer","ɵɵproperty","ctx_r0","svgContent","ɵɵsanitizeHtml","IconComponent","constructor","sanitizer","ngOnInit","_this","_asyncToGenerator","path","name","svgText","fetch","then","res","text","inner","replace","sanitize","HTML","err","console","error","ɵɵdirectiveInject","i1","DomSanitizer","selectors","inputs","standalone","features","ɵɵStandaloneFeature","attrs","_c0","decls","vars","consts","template","IconComponent_Template","rf","ctx","ɵɵtemplate","IconComponent_ng_container_0_Template"],"sources":["D:\\Development\\Angular\\e-commerce\\src\\app\\components\\icon\\icon.component.ts"],"sourcesContent":["import { Component, Input, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n\tselector: 'svg[si-icon]',\r\n\ttemplate: `<ng-container\r\n\t\t*ngIf=\"svgContent\"\r\n\t\t[innerHTML]=\"svgContent\"\r\n\t></ng-container>`,\r\n\tstandalone: true,\r\n})\r\nexport class IconComponent {\r\n\t@Input() name!: string;\r\n\tsvgContent: string | null = null;\r\n\r\n\tconstructor(private sanitizer: DomSanitizer) {}\r\n\r\n\tasync ngOnInit() {\r\n\t\tconst path = `assets/icons/${this.name}.svg`;\r\n\t\ttry {\r\n\t\t\tconst svgText = await fetch(path).then((res) => res.text());\r\n\r\n\t\t\t// Extract only <path>, <circle>, etc. inside <svg> (optional, for styling)\r\n\t\t\tconst inner = svgText\r\n\t\t\t\t.replace(/<svg[^>]*>/, '')\r\n\t\t\t\t.replace('</svg>', '');\r\n\r\n\t\t\tthis.svgContent = this.sanitizer.sanitize(\r\n\t\t\t\tSecurityContext.HTML,\r\n\t\t\t\tinner\r\n\t\t\t);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(`Missing icon: ${path}`);\r\n\t\t\tthis.svgContent = `<text x=\"0\" y=\"15\" font-size=\"12\">?</text>`;\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":";AAAA,SAA2BA,eAAe,QAAQ,eAAe;;;;;;IAKrDC,EAAA,CAAAC,kBAAA,MAGK;;;;IADfD,EAAA,CAAAE,UAAA,cAAAC,MAAA,CAAAC,UAAA,EAAAJ,EAAA,CAAAK,cAAA,CAAwB;;;AAI1B,OAAM,MAAOC,aAAa;EAIzBC,YAAoBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;IAF7B,KAAAJ,UAAU,GAAkB,IAAI;EAEc;EAExCK,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACb,MAAMC,IAAI,GAAG,gBAAgBF,KAAI,CAACG,IAAI,MAAM;MAC5C,IAAI;QACH,MAAMC,OAAO,SAASC,KAAK,CAACH,IAAI,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;QAE3D;QACA,MAAMC,KAAK,GAAGL,OAAO,CACnBM,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;QAEvBV,KAAI,CAACN,UAAU,GAAGM,KAAI,CAACF,SAAS,CAACa,QAAQ,CACxCtB,eAAe,CAACuB,IAAI,EACpBH,KAAK,CACL;OACD,CAAC,OAAOI,GAAG,EAAE;QACbC,OAAO,CAACC,KAAK,CAAC,iBAAiBb,IAAI,EAAE,CAAC;QACtCF,KAAI,CAACN,UAAU,GAAG,4CAA4C;;IAC9D;EACF;;;uBAxBYE,aAAa,EAAAN,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAbtB,aAAa;MAAAuB,SAAA;MAAAC,MAAA;QAAAjB,IAAA;MAAA;MAAAkB,UAAA;MAAAC,QAAA,GAAAhC,EAAA,CAAAiC,mBAAA;MAAAC,KAAA,EAAAC,GAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UANdzC,EAAA,CAAA2C,UAAA,IAAAC,qCAAA,0BAGK;;;UAFd5C,EAAA,CAAAE,UAAA,SAAAwC,GAAA,CAAAtC,UAAA,CAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}